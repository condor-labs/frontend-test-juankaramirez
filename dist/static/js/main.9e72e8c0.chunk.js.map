{"version":3,"sources":["contexts/WidgetsContext.js","config/index.js","services/resourcesService.js","components/Widgets/Provider.jsx","hooks/index.js","utils/helpers.js","components/Widgets/MainHeadquarter/index.jsx","components/Widgets/MainHeadquarterForecast/DayWeatherInfo/index.jsx","components/Widgets/MainHeadquarterForecast/index.jsx","components/Widgets/HeadquartersForecast/HQForecast/index.jsx","components/Widgets/HeadquartersForecast/index.jsx","components/Widgets/SuggestedDay/index.jsx","components/Widgets/SuggestedCities/CityData/index.jsx","components/Widgets/SuggestedCities/index.jsx","assets/svg/condor.svg","containers/Main/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["WidgetsContext","React","createContext","mainHeadquarterForecast","loadingMainHeadquarterForecast","headquartersForecast","loadingHeadquartersForecast","citiesForecast","loadingCities","serverConfig","ResourcesService","token","this","http","axios","create","baseURL","get","then","response","places","data","forecastList","list","city","result","WidgetProvider","children","useState","loading","setLoading","setMainHeadquarterForecast","resourcesServices","ResourcesServices","useEffect","mainHeadquarterExtendedForecast","catch","err","console","log","useGetMainHeadquarterForecast","setHeadquartersForecast","mainHeadquarter","find","place","main_headquarter","useGetHeadquartersForecast","setCitiesForecast","cities","useGetCitiesForecast","Provider","value","kelvinToCelsius","kelvin","Math","round","greetByTime","hour","moment","WidgetMainHeadquarter","useContext","image","name","weatherInfo","main","wind","weather","icon","id","style","backgroundImage","className","temp","humidity","speed","DayWeatherInfo","show","day","temperature","windSpeed","WidgetsMainHeadquarterForecast","currentSlide","setCurrentSlide","totalGroups","setTotalGroups","ceil","length","onClick","carouselControls","map","forecast","index","date","tempInCelsius","dayName","format","max","min","itemId","action","HQForecast","description","WidgetsHeadquartersForecast","filter","hq","hqData","country","sys","hqName","WidgetSuggestedDay","suggestedDayData","setSuggestedDayData","CityData","target","href","WidgetSuggestedCities","element","slice","Main","showContent","setShowContent","setTimeout","document","body","overflow","Fragment","src","svg","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e72e8c0.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst WidgetsContext = React.createContext({\r\n  mainHeadquarterForecast: null,\r\n  loadingMainHeadquarterForecast: null,\r\n  headquartersForecast: null,\r\n  loadingHeadquartersForecast: false,\r\n  citiesForecast: null,\r\n  loadingCities: false,\r\n});\r\n\r\nexport default WidgetsContext;\r\n","export const serverConfig = {\r\n  apiUrl: \"https://run.mocky.io/v3/\",\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { serverConfig } from \"../config\";\r\n\r\nclass ResourcesService {\r\n  constructor(token) {\r\n    this.http = axios.create({\r\n      baseURL: serverConfig.apiUrl,\r\n    });\r\n  }\r\n\r\n  headquartersForecast() {\r\n    return this.http\r\n      .get(`818d0158-727b-461e-9f76-06734ed7e582`)\r\n      .then((response) => ({\r\n        places: response.data.places,\r\n      }));\r\n  }\r\n\r\n  mainHeadquarterExtendedForecast() {\r\n    return this.http\r\n      .get(`73c29128-d158-40db-aeae-ea78a0d762b7`)\r\n      .then((response) => ({\r\n        forecastList: response.data.list,\r\n        city: response.data.city,\r\n      }));\r\n  }\r\n\r\n  cities() {\r\n    return this.http\r\n      .get(`f8926877-849a-416f-8226-9fd9d9fc5e07`)\r\n      .then((response) => ({\r\n        citiesForecast: response.data.result,\r\n      }));\r\n  }\r\n}\r\n\r\nexport default ResourcesService;\r\n","import React from \"react\";\r\n\r\n/* Context */\r\nimport WidgetsContext from \"../../contexts/WidgetsContext\";\r\n\r\nimport {\r\n  useGetMainHeadquarterForecast,\r\n  useGetHeadquartersForecast,\r\n  useGetCitiesForecast,\r\n} from \"../../hooks\";\r\n\r\nfunction WidgetProvider({ children }) {\r\n  const {\r\n    mainHeadquarterForecast,\r\n    loading: loadingMainHeadquarterForecast,\r\n  } = useGetMainHeadquarterForecast();\r\n\r\n  const {\r\n    headquartersForecast,\r\n    loading: loadingHeadquartersForecast,\r\n  } = useGetHeadquartersForecast();\r\n\r\n  const { citiesForecast, loading: loadingCities } = useGetCitiesForecast();\r\n\r\n  return (\r\n    <WidgetsContext.Provider\r\n      value={{\r\n        mainHeadquarterForecast,\r\n        loadingMainHeadquarterForecast,\r\n        headquartersForecast,\r\n        loadingHeadquartersForecast,\r\n        citiesForecast,\r\n        loadingCities,\r\n      }}\r\n    >\r\n      {children}\r\n    </WidgetsContext.Provider>\r\n  );\r\n}\r\n\r\nexport default WidgetProvider;\r\n","import { useState, useEffect } from \"react\";\r\nimport ResourcesServices from \"../services/resourcesService\";\r\n\r\nexport function useGetMainHeadquarterForecast() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [mainHeadquarterForecast, setMainHeadquarterForecast] = useState(null);\r\n  const resourcesServices = new ResourcesServices();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    resourcesServices\r\n      .mainHeadquarterExtendedForecast()\r\n      .then(({ forecastList, city }) => {\r\n        setLoading(false);\r\n        setMainHeadquarterForecast({ forecastList, city });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return { mainHeadquarterForecast, loading };\r\n}\r\n\r\nexport function useGetHeadquartersForecast() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [headquartersForecast, setHeadquartersForecast] = useState(null);\r\n  const resourcesServices = new ResourcesServices();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    resourcesServices\r\n      .headquartersForecast()\r\n      .then(({ places }) => {\r\n        setLoading(false);\r\n        setHeadquartersForecast({\r\n          places,\r\n          mainHeadquarter: places.find((place) => place.main_headquarter),\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return { headquartersForecast, loading };\r\n}\r\n\r\nexport function useGetCitiesForecast() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [citiesForecast, setCitiesForecast] = useState(null);\r\n  const resourcesServices = new ResourcesServices();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    resourcesServices\r\n      .cities()\r\n      .then(({ citiesForecast }) => {\r\n        setLoading(false);\r\n        setCitiesForecast(citiesForecast);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return { citiesForecast, loading };\r\n}\r\n\r\nexport function useWindowSize() {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n}\r\n","import moment from \"moment\";\r\n\r\nexport function kelvinToCelsius(kelvin) {\r\n  return kelvin && Math.round(kelvin - 273.15);\r\n}\r\n\r\nexport function greetByTime() {\r\n  const hour = moment().hour();\r\n  if (hour >= 4 && hour < 12) {\r\n    return \"Good morning\";\r\n  } else if (hour >= 12 && hour < 18) {\r\n    return \"Good afternoon\";\r\n  } else if (hour >= 18 && hour <= 22) {\r\n    return \"Good evening\";\r\n  } else {\r\n    return \"Good night\";\r\n  }\r\n}\r\n","import React from \"react\";\r\n// Context\r\nimport WidgetsContext from \"../../../contexts/WidgetsContext\";\r\n// Helpers\r\nimport { kelvinToCelsius, greetByTime } from \"../../../utils/helpers\";\r\n// Styles\r\nimport \"./styles.scss\";\r\n\r\nfunction WidgetMainHeadquarter() {\r\n  const { headquartersForecast } = React.useContext(WidgetsContext);\r\n\r\n  const data = headquartersForecast && headquartersForecast.mainHeadquarter;\r\n  const { image, name, main: weatherInfo, wind, weather } = data || {};\r\n\r\n  const icon = weather && weather[0].icon;\r\n\r\n  return (\r\n    <div id=\"widget-header\" style={{ backgroundImage: `url(${image})` }}>\r\n      <div className=\"widget-content\">\r\n        <div className=\"widget-data-container\">\r\n          <div className=\"widget-headquarter-container\">\r\n            <div className=\"widget-headquarter\">\r\n              <i className=\"fa fa-map-marker\"></i>\r\n              {name}\r\n            </div>\r\n          </div>\r\n          <div className=\"widget-weather-info\">\r\n            <div className=\"widget-temperature\">\r\n              {kelvinToCelsius(weatherInfo && weatherInfo.temp)}° C\r\n            </div>\r\n            <div className=\"widget-humidity-wind\">\r\n              <span className=\"widget-humidity\">\r\n                <i className=\"fa fa-circle\"></i>{\" \"}\r\n                {weather && `${weatherInfo.humidity} %`}\r\n              </span>\r\n              <span className=\"widget-wind\">\r\n                <i className=\"fa fa-circle\"></i>\r\n                {wind && `${wind.speed} m/s`}\r\n              </span>\r\n            </div>\r\n            <div className=\"widget-greetings\">\r\n              <span>\r\n                {greetByTime()}, <strong>Condor!</strong>\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget-icon-container\">\r\n          <i className={`widget-icon wi wi-day-${icon}`}></i>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WidgetMainHeadquarter;\r\n","import React from \"react\";\r\n\r\nfunction DayWeatherInfo({ show, day, temperature, humidity, windSpeed }) {\r\n  return (\r\n    <div className={`widget-carousel-item${!show ? \" hidden\" : \"\"}`}>\r\n      <div className=\"widget-day\">{day}</div>\r\n      <div className=\"widget-temperature\">{temperature}° C</div>\r\n      <div className=\"widget-carousel-item-humidity-wind\">\r\n        <span className=\"widget-humidity\">\r\n          <i className=\"fa fa-circle\"></i> {humidity} %\r\n        </span>\r\n        <span className=\"widget-wind\">\r\n          <i className=\"fa fa-circle\"></i>\r\n          {windSpeed} m/s\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DayWeatherInfo;\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\n// Components\r\nimport DayWeatherInfo from \"./DayWeatherInfo\";\r\n// Context\r\nimport WidgetsContext from \"../../../contexts/WidgetsContext\";\r\n//Helpers\r\nimport { kelvinToCelsius } from \"../../../utils/helpers\";\r\n// Styles\r\nimport \"./styles.scss\";\r\n\r\nfunction WidgetsMainHeadquarterForecast() {\r\n  const ITEMS_PER_SLIDE = 3;\r\n  const { mainHeadquarterForecast } = React.useContext(WidgetsContext);\r\n  const [currentSlide, setCurrentSlide] = React.useState(1);\r\n  const [totalGroups, setTotalGroups] = React.useState(1);\r\n\r\n  React.useEffect(() => {\r\n    if (mainHeadquarterForecast) {\r\n      setTotalGroups(\r\n        Math.ceil(mainHeadquarterForecast.forecastList.length / ITEMS_PER_SLIDE)\r\n      );\r\n    }\r\n  }, [mainHeadquarterForecast]);\r\n\r\n  return (\r\n    <div id=\"widget-carousel\">\r\n      <div className=\"widget-carousel-title\">FORECAST EXTENDED</div>\r\n      <div className=\"widget-carousel-controls\">\r\n        <div className=\"widget-carousel-controls-container\">\r\n          <span\r\n            className={currentSlide === 1 ? \"disabled\" : null}\r\n            onClick={() => currentSlide > 1 && carouselControls(\"prev\")}\r\n          >\r\n            <i className=\"fa fa-arrow-left\"></i>\r\n          </span>\r\n          <span\r\n            className={currentSlide === totalGroups ? \"disabled\" : null}\r\n            onClick={() =>\r\n              currentSlide < totalGroups && carouselControls(\"next\")\r\n            }\r\n          >\r\n            <i className=\"fa fa-arrow-right\"></i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"widget-carousel-item-container\">\r\n        {mainHeadquarterForecast &&\r\n          mainHeadquarterForecast.forecastList.map((forecast, index) => {\r\n            const {\r\n              main: { temp, humidity },\r\n              wind: { speed },\r\n              date,\r\n            } = forecast;\r\n\r\n            const tempInCelsius = kelvinToCelsius(temp);\r\n            const dayName = moment(date, \"YYYY-MM-DD\").format(\"dddd\");\r\n            const max = currentSlide * ITEMS_PER_SLIDE;\r\n            const min = max - (ITEMS_PER_SLIDE - 1);\r\n            const itemId = index + 1;\r\n\r\n            return (\r\n              <DayWeatherInfo\r\n                key={index}\r\n                show={itemId >= min && itemId <= max}\r\n                day={dayName}\r\n                temperature={tempInCelsius}\r\n                humidity={humidity}\r\n                windSpeed={speed}\r\n              />\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  function carouselControls(action) {\r\n    if (action === \"next\" && currentSlide + 1 <= totalGroups) {\r\n      setCurrentSlide(currentSlide + 1);\r\n    } else if (action === \"prev\" && currentSlide - 1 >= 1) {\r\n      setCurrentSlide(currentSlide - 1);\r\n    }\r\n  }\r\n}\r\n\r\nexport default WidgetsMainHeadquarterForecast;\r\n","import React from \"react\";\r\n\r\n// Helpers\r\nimport { kelvinToCelsius } from \"../../../../utils/helpers\";\r\n\r\nfunction HQForecast({ image, name, description, weatherInfo }) {\r\n  return (\r\n    <div className=\"widget-card\">\r\n      <div className=\"widget-card-main-content\">\r\n        <div className=\"widget-card-image-container\">\r\n          <div\r\n            className=\"widget-card-image\"\r\n            style={{\r\n              backgroundImage: `url(${image})`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <div className=\"widget-card-data\">\r\n          <div className=\"widget-headquarter-name\">\r\n            <i className=\"fa fa-map-marker\"></i>\r\n            {name}\r\n          </div>\r\n          <div className=\"widget-headquarter-description\">{description}</div>\r\n          <div className=\"widget-headquarter-weather-info\">\r\n            <span className=\"widget-temperature\">\r\n              <i className=\"fa fa-circle\"></i>\r\n              {weatherInfo ? kelvinToCelsius(weatherInfo.temperature) : \" - \"}°\r\n              C\r\n            </span>\r\n            <span className=\"widget-humidity\">\r\n              <i className=\"fa fa-circle\"></i>\r\n              {weatherInfo ? weatherInfo.humidity : \" - \"} %\r\n            </span>\r\n            <span className=\"widget-wind\">\r\n              <i className=\"fa fa-circle\"></i>\r\n              {weatherInfo ? weatherInfo.windSpeed : \" - \"} m/s\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"widget-icon\">\r\n        <i className={`widget-icon wi wi-day-${weatherInfo.icon}`}></i>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HQForecast;\r\n","import React from \"react\";\r\n// Components\r\nimport HQForecast from \"./HQForecast\";\r\n// Context\r\nimport WidgetsContext from \"../../../contexts/WidgetsContext\";\r\n// Styles\r\nimport \"./styles.scss\";\r\n\r\nfunction WidgetsHeadquartersForecast() {\r\n  const { headquartersForecast } = React.useContext(WidgetsContext);\r\n  return (\r\n    <div id=\"widget-favorite\">\r\n      <h2>\r\n        <strong>OUR FAVORITE</strong> PLACES\r\n      </h2>\r\n      <div className=\"widget-card-container\">\r\n        {headquartersForecast &&\r\n          headquartersForecast.places\r\n            .filter((hq) => !hq.main_headquarter)\r\n            .map((hqData, index) => {\r\n              const {\r\n                image,\r\n                name,\r\n                description,\r\n                wind: { speed },\r\n                sys: { country },\r\n                main: { temp, humidity },\r\n                weather,\r\n              } = hqData;\r\n              const hqName = `${name} - ${country}`;\r\n              const weatherInfo = {\r\n                temperature: temp,\r\n                humidity,\r\n                windSpeed: speed,\r\n                icon: weather && weather[0].icon,\r\n              };\r\n\r\n              return (\r\n                <HQForecast\r\n                  key={index}\r\n                  name={hqName}\r\n                  image={image}\r\n                  description={description}\r\n                  weatherInfo={weatherInfo}\r\n                />\r\n              );\r\n            })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WidgetsHeadquartersForecast;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\n// Context\r\nimport WidgetsContext from \"../../../contexts/WidgetsContext\";\r\n// Helpers\r\nimport { kelvinToCelsius } from \"../../../utils/helpers\";\r\n// Styles\r\nimport \"./styles.scss\";\r\n\r\nfunction WidgetSuggestedDay() {\r\n  const { mainHeadquarterForecast } = React.useContext(WidgetsContext);\r\n  const [suggestedDayData, setSuggestedDayData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (mainHeadquarterForecast) {\r\n      const { city, forecastList } = mainHeadquarterForecast;\r\n      forecastList.map((forecast) => {\r\n        const tempInCelsius = kelvinToCelsius(forecast.main.temp);\r\n        if (!suggestedDayData) {\r\n          setSuggestedDayData({\r\n            city,\r\n            ...forecast,\r\n            main: { ...forecast.main, temp: tempInCelsius },\r\n          });\r\n        } else {\r\n          if (\r\n            tempInCelsius <= 25 &&\r\n            tempInCelsius <= 28 &&\r\n            forecast.main.humidity < suggestedDayData.main.humidity\r\n          ) {\r\n            setSuggestedDayData({\r\n              city,\r\n              ...forecast,\r\n              main: { ...forecast.main, temp: tempInCelsius },\r\n            });\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }, [mainHeadquarterForecast]);\r\n\r\n  return (\r\n    <div id=\"widget-suggest\">\r\n      <h2>\r\n        <strong>HEADQUARTER</strong> SUGGESTED\r\n      </h2>\r\n      <div className=\"widget-suggest-content\">\r\n        <div className=\"widget-suggest-weather-data\">\r\n          <div className=\"widget-headquarter\">\r\n            <i className=\"fa fa-map-marker\"></i>\r\n            {suggestedDayData && suggestedDayData.city.name} -{\" \"}\r\n            {suggestedDayData && suggestedDayData.city.country}\r\n          </div>\r\n          <div className=\"widget-temperature\">\r\n            {suggestedDayData ? suggestedDayData.main.temp : \" - \"}° C\r\n          </div>\r\n          <div className=\"widget-suggest-humidity-wind\">\r\n            <span className=\"widget-humidity\">\r\n              <i className=\"fa fa-circle\"></i>\r\n              {suggestedDayData ? suggestedDayData.main.humidity : \" - \"} %\r\n            </span>\r\n            <span className=\"widget-wind\">\r\n              <i className=\"fa fa-circle\"></i>\r\n              {suggestedDayData ? suggestedDayData.wind.speed : \" - \"} m/s\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"widget-suggest-weather-extra\">\r\n          <div className=\"widget-icon\">\r\n            <i\r\n              className={`widget-icon wi wi-day-${\r\n                suggestedDayData && suggestedDayData.weather[0].icon\r\n              }`}\r\n            ></i>\r\n          </div>\r\n          <div className=\"widget-day\">\r\n            {suggestedDayData &&\r\n              moment(suggestedDayData.date, \"YYYY-MM-DD\").format(\"dddd\")}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WidgetSuggestedDay;\r\n","import React from \"react\";\r\n\r\nfunction CityData({ image, name }) {\r\n  return (\r\n    <div\r\n      className=\"widget-card\"\r\n      style={{\r\n        backgroundImage: `url(${image})`,\r\n      }}\r\n    >\r\n      <div className=\"widget-city-name-container\">\r\n        <div className=\"widget-city-name\">{name}</div>\r\n      </div>\r\n      <div className=\"widget-city-link-container\">\r\n        <a\r\n          target=\"_blank\"\r\n          href={`https://www.google.com/search?q=${name}&oq=${name}`}\r\n        >\r\n          VISIT PLACE\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CityData;\r\n","import React from \"react\";\r\n// Components\r\nimport CityData from \"./CityData\";\r\n// Context\r\nimport WidgetsContext from \"../../../contexts/WidgetsContext\";\r\n// Helpers\r\nimport { kelvinToCelsius } from \"../../../utils/helpers\";\r\n// Styles\r\nimport \"./styles.scss\";\r\n\r\nfunction WidgetSuggestedCities() {\r\n  const { citiesForecast } = React.useContext(WidgetsContext);\r\n\r\n  return (\r\n    <div id=\"widget-cities\">\r\n      <h2>\r\n        <strong>PLACE TO</strong> VISIT\r\n      </h2>\r\n      <div className=\"widget-card-container\">\r\n        {citiesForecast &&\r\n          citiesForecast\r\n            .map((city, index) => {\r\n              const tempInCelsius = kelvinToCelsius(city.main.temp);\r\n              if (tempInCelsius >= 24 && tempInCelsius <= 30) {\r\n                return (\r\n                  <CityData key={index} image={city.image} name={city.name} />\r\n                );\r\n              }\r\n            })\r\n            .filter((element) => element)\r\n            .slice(0, 3)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WidgetSuggestedCities;\r\n","export default __webpack_public_path__ + \"static/media/condor.c733be3e.svg\";","import React from \"react\";\r\n// Components\r\nimport WidgetsProvider from \"./../../components/Widgets/Provider\";\r\nimport WidgetsMainHeadquarter from \"./../../components/Widgets/MainHeadquarter\";\r\nimport WidgetsMainHeadquarterForecast from \"./../../components/Widgets/MainHeadquarterForecast\";\r\nimport WidgetsHeadquartersForecast from \"./../../components/Widgets/HeadquartersForecast\";\r\nimport WidgetsSuggestedDay from \"./../../components/Widgets/SuggestedDay\";\r\nimport WidgetsSuggestedCities from \"./../../components/Widgets/SuggestedCities\";\r\n// Context\r\nimport WidgetsContext from \"../../contexts/WidgetsContext\";\r\n// Assets\r\nimport svg from \"../../assets/svg/condor.svg\";\r\n// Stlyes\r\nimport \"./styles.scss\";\r\n\r\nfunction Main() {\r\n  const {\r\n    loadingMainHeadquarterForecast,\r\n    loadingHeadquartersForecast,\r\n    loadingCities,\r\n  } = React.useContext(WidgetsContext);\r\n\r\n  const [showContent, setShowContent] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (\r\n      !loadingMainHeadquarterForecast &&\r\n      !loadingHeadquartersForecast &&\r\n      !loadingCities\r\n    ) {\r\n      setTimeout(() => {\r\n        setShowContent(true);\r\n        document.body.style.overflow = \"auto\";\r\n      }, 1500);\r\n    }\r\n  }, [\r\n    loadingMainHeadquarterForecast,\r\n    loadingHeadquartersForecast,\r\n    loadingCities,\r\n  ]);\r\n  return (\r\n    <React.Fragment>\r\n      <div className={`loading-splash${showContent ? \" hidden\" : \"\"}`}>\r\n        <img src={svg} />\r\n      </div>\r\n      <div className={`main-widget-container${showContent ? \"show\" : \"\"}`}>\r\n        <WidgetsProvider>\r\n          <WidgetsMainHeadquarter />\r\n          <WidgetsMainHeadquarterForecast />\r\n          <WidgetsHeadquartersForecast />\r\n          <WidgetsSuggestedDay />\r\n          <WidgetsSuggestedCities />\r\n        </WidgetsProvider>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\";\n\n//Components\nimport Main from \"./containers/Main\";\n\n// Styles\nimport \"./assets/styles/global.scss\";\n\nfunction App() {\n  document.body.style.overflow = \"hidden\";\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}